#!/usr/bin/ruby
=begin
AOJ問題 volume0-0015 国家予算
ある国の国家予算は 81 兆 7891 億もあります。このような大きな額の計算を行いたいと思うのですが、
プログラムで普通に使われている 32 ビットの符号付の整数では最大 21 億 4748 万 3647 までしか
表すことが出来ません。そこで、80 桁までの 0 以上の整数を２つ入力し、
その数の和を出力して終了するプログラムを作成して下さい。
与えられた数やその和が 10 進数の正の整数で 80 桁を超える場合は、overflow と表示して下さい。
[input]
複数のデータセットが与えられます。１行目にデータセット数 N が与えられます。
続いて N 個のデータセットが与えられます。各データセットは以下のように２行から構成されています。
１つ目の数　（整数文字列）
２つ目の数　（整数文字列）
[output]
各データセットに対して、与えられた２つの和を一行に整数文字列として出力して下さい。
[sample input]
2
1000
800
9999999999999999999999999999999999999999
1
[sample output]
1800
10000000000000000000000000000000000000000
=end

file = File.readlines("./input.txt").map(&:to_i)

file.shift
sum = 0

file.each_with_index do |n, i|
  if i.even? then
    sum = n
  else
    sum += n
    if sum.to_s.size > 80 then
      puts "overflow"
    else
      puts sum
    end
  end
end
