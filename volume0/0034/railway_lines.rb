#!/usr/bin/ruby
=begin
AOJ問題 volume0-0034 鉄道路線
複線（上りと下りが別の線路になっていてどこででもすれ違える）の鉄道路線があります。
この路線には終端駅を含めて11の駅があり、それぞれの駅と駅の間は1～10の区間番号で呼ばれています。
この路線の両方の終端駅から列車が同時に出発して、途中で停まらずに走ります。
各区間の長さと2本の列車の速度を読み込んで、それぞれの場合について
列車がすれ違う区間の番号を出力して終了するプログラムを作成してください。
ただし、ちょうど駅のところですれ違う場合は、両側の区間番号のうち小さいほうの数字を出力します。
また、列車の長さ、駅の長さは無視できるものとします。
[input]
区間1の長さをl1 km 、区間2の長さをl2 km、...、区間10の長さをl10 km、
区間1側の終端駅を出発した列車の速度をv1 km/h、
区間10側の終端駅を出発した列車の速度をv2 km/hとしたとき、入力データは以下のようになります。
l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,v1,v2（1 件目のデータ：全て整数）
l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,v1,v2（2 件目のデータ：全て整数）
l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,v1,v2（3 件目のデータ：全て整数）
...
...
[output]
列車がすれちがう区間の番号　（1 件目のデータに対する出力）
列車がすれちがう区間の番号　（2 件目のデータに対する出力）
列車がすれちがう区間の番号　（3 件目のデータに対する出力）
...
...
[sample input]
1,1,1,1,1,1,1,1,1,1,40,60
1,1,1,1,1,3,3,3,3,3,50,50
10,10,10,10,10,10,10,10,10,10,50,49
[sample output]
4
7
6
=end

# 速度計算の連立方程式
# 電車が同じ地点に到達したときの、各電車の移動距離をL1,L2とすると
# * L1 / v1 = L2 / v2
# * L1 + L2 = l1 + l2 + ... + l10 (= total_l)
# ここからL2を消去して
# L1 = total_l * (1 / (1 + v2 / v1))

File.readlines("./input.txt").each do |line|
  datas = line.split(",").map(&:to_i)
  v2 = datas.pop
  v1 = datas.pop
  total_l = datas.inject(:+)
  l1 = total_l * (1 / (1 + v2 / v1.to_f))

  sum = 0
  datas.each_with_index do |l, idx|
    sum += l
    if sum >= l1 then
      puts idx + 1
      break
    end
  end
end
