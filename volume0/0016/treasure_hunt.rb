#!/usr/bin/ruby
=begin
AOJ問題 volume0-0016 宝探し
昨年他界した曾祖父の遺品を整理していたところ、次のような紙が出てきました。
「三本松から北を向いて、次の通りに進め。最後についた場所に宝がある。
30, 10
50, -40
20, 15
...」
紙の裏には「最初の数だけ前に進んで、次の数の角度だけ右にまわる（負の数は左にまわる）、それ以降はその繰り返し」
とメモがしてあります。
祖母によれば「三本松」は、街のちょうど中心にあったそうです。
しかし、今はビルや家が建ち並んでいて、ここに書いてあるとおりに歩くことはできません。
地図の上で宝のある場所を探してください。
1歩は1mだとします。入力データは、進む歩数と回転する角度を書いた行が並んでいて、最後に「0, 0」という行があります。
最後まで指示通りに歩いたときについた場所を「街の中心から東へxm、北へym」のように測り、
そのxとyを表示して終了するプログラムを作成してください。
西および南の場合はx,yは負の値となります。x,yともに整数部を表示してください。
[input]
歩数（100以下の正の整数）、回転角度（-180以上180以下の整数）が半角カンマ区切りで与えられます。
[output]
x,yをそれぞれ1行に出力してください。
[sample input]
56,65
97,54
64,-4
55,76
42,-27
43,80
87,-86
55,-6
89,34
95,5
0,0
[sample output]
171
-302
=end

# 指針：三角比を使った移動距離の計算
# 「北を向いた状態」からスタート ⇒ 初期角度が90度
# 角度はプラスが右回転、マイナスが左回転 ⇒ 逆回転（-1を掛けてから足す）

file = []
File.readlines("./input.txt").map(&:chomp).each do |data|
  file << data.split(",").map(&:to_i)
end

x = 0
y = 0
prev_rad = 90 * Math::PI / 180.0

file.each do |data|
  x += data[0] * Math.cos(prev_rad)
  y += data[0] * Math.sin(prev_rad)
  prev_rad -= data[1] * Math::PI / 180.0
end

puts x.to_i
puts y.to_i
